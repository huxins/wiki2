(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{319:function(t,e,a){"use strict";a.r(e);var v=a(14),_=Object(v.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"http-caching"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-caching"}},[t._v("#")]),t._v(" HTTP Caching")]),t._v(" "),e("h2",{attrs:{id:"cache-control"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cache-control"}},[t._v("#")]),t._v(" Cache-Control")]),t._v(" "),e("p",[t._v("通过指定首部字段 Cache-Control 的指令，就能操作缓存的工作机制。")]),t._v(" "),e("p",[t._v("指令的参数是可选的，多个指令之间通过 "),e("code",[t._v(",")]),t._v(" 分隔。首部字段 Cache-Control 的指令可用于请求及响应时。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("Cache-Control: private, max-age=0, no-cache\n")])])]),e("p",[t._v("可用的指令按请求和响应分类如下所示。")]),t._v(" "),e("h3",{attrs:{id:"request-cache-control-directives"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#request-cache-control-directives"}},[t._v("#")]),t._v(" Request Cache-Control Directives")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("指令")]),t._v(" "),e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("no-cache")]),t._v(" "),e("td",[t._v("无")]),t._v(" "),e("td",[t._v("强制向源服务器再次验证")])]),t._v(" "),e("tr",[e("td",[t._v("no-store")]),t._v(" "),e("td",[t._v("无")]),t._v(" "),e("td",[t._v("不缓存请求或响应的任何内容")])]),t._v(" "),e("tr",[e("td",[t._v("max-age=<seconds>")]),t._v(" "),e("td",[t._v("必需")]),t._v(" "),e("td",[t._v("资源缓存的最大周期")])]),t._v(" "),e("tr",[e("td",[t._v("max-stale[=<seconds>]")]),t._v(" "),e("td",[t._v("可省略")]),t._v(" "),e("td",[t._v("表明客户端愿意接收过期的资源")])]),t._v(" "),e("tr",[e("td",[t._v("min-fresh=<seconds>")]),t._v(" "),e("td",[t._v("必需")]),t._v(" "),e("td",[t._v("期望在指定时间内的资源为最新状态")])]),t._v(" "),e("tr",[e("td",[t._v("no-transform")]),t._v(" "),e("td",[t._v("无")]),t._v(" "),e("td",[t._v("缓存不可更改媒体类型")])]),t._v(" "),e("tr",[e("td",[t._v("only-if-cached")]),t._v(" "),e("td",[t._v("无")]),t._v(" "),e("td",[t._v("从缓存获取资源")])])])]),t._v(" "),e("ul",[e("li",[t._v("no-cache")])]),t._v(" "),e("p",[t._v("客户端发送的请求中如果包含 no-cache 指令，则表示客户端将不会接收缓存过的响应。于是，缓存服务器必须把客户端请求转发给源服务器。")]),t._v(" "),e("ul",[e("li",[t._v("max-age")])]),t._v(" "),e("p",[t._v("当客户端发送的请求中包含 max-age 指令时，如果判定缓存资源的缓存时间数值比指定时间的数值更小，那么客户端就接收缓存的资源。比如，指定时间为一周，缓存服务器已缓存该资源未超过一周，就返回该资源。另外，当指定 max-age 值为 0，那么缓存服务器通常需要将请求转发给源服务器。")]),t._v(" "),e("ul",[e("li",[t._v("min-fresh")])]),t._v(" "),e("p",[t._v("min-fresh 指令要求缓存服务器返回至少还未过指定时间的缓存资源。比如，当指定 min-fresh 为 60 秒后，过了 60 秒的资源都无法作为响应返回了。")]),t._v(" "),e("ul",[e("li",[t._v("max-stale")])]),t._v(" "),e("p",[t._v("使用 max-stale 可指示缓存资源，即使过期也照常接收。如果指令未指定参数值，那么无论经过多久，客户端都会接收响应；如果指令中指定了具体数值，那么即使过期，只要仍处于 max-stale 指定的时间内，仍旧会被客户端接收。")]),t._v(" "),e("ul",[e("li",[t._v("only-if-cached")])]),t._v(" "),e("p",[t._v("使用 only-if-cached 指令表示客户端只接受已缓存的响应。换言之，该指令要求缓存服务器不重新加载响应，也不会再次确认资源有效性。若发生请求缓存服务器的本地缓存无响应，则返回状态码 504 Gateway Timeout。")]),t._v(" "),e("h3",{attrs:{id:"response-cache-control-directives"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#response-cache-control-directives"}},[t._v("#")]),t._v(" Response Cache-Control Directives")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("指令")]),t._v(" "),e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("public")]),t._v(" "),e("td",[t._v("无")]),t._v(" "),e("td",[t._v("可向任意方提供响应的缓存")])]),t._v(" "),e("tr",[e("td",[t._v("private")]),t._v(" "),e("td",[t._v("可省略")]),t._v(" "),e("td",[t._v("仅向特定用户返回响应")])]),t._v(" "),e("tr",[e("td",[t._v("no-cache")]),t._v(" "),e("td",[t._v("可省略")]),t._v(" "),e("td",[t._v("发送响应前必须先确认其有效性")])]),t._v(" "),e("tr",[e("td",[t._v("no-store")]),t._v(" "),e("td",[t._v("无")]),t._v(" "),e("td",[t._v("不缓存请求或响应的任何内容")])]),t._v(" "),e("tr",[e("td",[t._v("no-transform")]),t._v(" "),e("td",[t._v("无")]),t._v(" "),e("td",[t._v("缓存不可更改媒体类型")])]),t._v(" "),e("tr",[e("td",[t._v("must-revalidate")]),t._v(" "),e("td",[t._v("无")]),t._v(" "),e("td",[t._v("资源过期后必须向源服务器进行确认")])]),t._v(" "),e("tr",[e("td",[t._v("proxy-revalidate")]),t._v(" "),e("td",[t._v("无")]),t._v(" "),e("td",[t._v("同上，但它仅适用于共享缓存")])]),t._v(" "),e("tr",[e("td",[t._v("max-age=<seconds>")]),t._v(" "),e("td",[t._v("必需")]),t._v(" "),e("td",[t._v("资源缓存的最大周期")])]),t._v(" "),e("tr",[e("td",[t._v("s-maxage=<seconds>")]),t._v(" "),e("td",[t._v("必需")]),t._v(" "),e("td",[t._v("同上，但它仅适用于共享缓存")])])])]),t._v(" "),e("ul",[e("li",[t._v("no-cache")])]),t._v(" "),e("p",[t._v("如果服务器返回的响应中包含 no-cache 指令，那么在发布缓存副本之前，强制要求缓存把请求提交给原始服务器进行验证。")]),t._v(" "),e("p",[t._v("由服务器返回的响应中，若报文首部字段 Cache-Control 中对 no-cache 字段名具体"),e("a",{attrs:{href:"https://tools.ietf.org/html/rfc7234#section-5.2.2.2",target:"_blank",rel:"noopener noreferrer"}},[t._v("指定参数值"),e("OutboundLink")],1),t._v("，那么客户端在接收到这个被指定参数值的首部字段对应的响应报文后，就不能使用缓存。换言之，无参数值的首部字段可以使用缓存。只能在响应指令中指定该参数。")]),t._v(" "),e("ul",[e("li",[t._v("s-maxage")])]),t._v(" "),e("p",[t._v("s-maxage 指令的功能和 max-age 指令的相同，它们的不同点是 s-maxage 指令只适用于供多位用户使用的公共缓存服务器。也就是说，对于向同一用户重复返回响应的服务器来说，这个指令没有任何作用。")]),t._v(" "),e("p",[t._v("另外，当使用 s-maxage 指令后，则直接忽略对 Expires 首部字段及 max-age 指令的处理。")]),t._v(" "),e("ul",[e("li",[t._v("max-age")])]),t._v(" "),e("p",[t._v("当服务器返回的响应中包含 max-age 指令时，缓存服务器将不对资源的有效性再作确认，而 max-age 数值代表资源保存为缓存的最长时间。")]),t._v(" "),e("p",[t._v("应用 HTTP/1.1 版本的缓存服务器遇到同时存在 Expires 首部字段的情况时，会优先处理 max-age 指令，而忽略掉 Expires 首部字段。而 HTTP/1.0 版本的缓存服务器的情况却相反，max-age 指令会被忽略掉。")]),t._v(" "),e("ul",[e("li",[t._v("must-revalidate")])]),t._v(" "),e("p",[t._v("使用 must-revalidate 指令，代理会向源服务器再次验证即将返回的响应缓存目前是否仍然有效。若代理无法连通源服务器再次获取有效资源的话，缓存必须给客户端一条 504（Gateway Timeout）状态码。")]),t._v(" "),e("p",[t._v("另外，使用 must-revalidate 指令会忽略请求的 max-stale 指令（即使已经在首部使用了 max-stale，也不会再有效果）。")]),t._v(" "),e("ul",[e("li",[t._v("proxy-revalidate")])]),t._v(" "),e("p",[t._v("proxy-revalidate 指令等效于 must-revalidate，但仅适用于共享缓存。")]),t._v(" "),e("h2",{attrs:{id:"pragma"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pragma"}},[t._v("#")]),t._v(" Pragma")]),t._v(" "),e("p",[t._v("Pragma 是 HTTP/1.1 之前版本的历史遗留字段，仅作为与 HTTP/1.0 的向后兼容而定义。")]),t._v(" "),e("p",[t._v("规范定义的形式唯一，如下所示。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("Pragma: no-cache\n")])])]),e("p",[t._v("该首部字段属于通用首部字段，但只用在客户端发送的请求中。客户端会要求所有的中间服务器不返回缓存的资源。")]),t._v(" "),e("p",[t._v("所有的中间服务器如果都能以 HTTP/1.1 为基准，那直接采用 Cache-Control: no-cache 指定缓存的处理方式是最为理想的。但要整体掌握全部中间服务器使用的 HTTP 协议版本却是不现实的。因此，发送的请求会同时含有下面两个首部字段。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("Cache-Control: no-cache\nPragma: no-cache\n")])])]),e("h2",{attrs:{id:"references"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[t._v("#")]),t._v(" References")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://tools.ietf.org/html/rfc7234#section-5",target:"_blank",rel:"noopener noreferrer"}},[t._v("RFC 7234 - Header Field Definitions"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Caching",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN - HTTP 缓存"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://blog.techbridge.cc/2017/06/17/cache-introduction",target:"_blank",rel:"noopener noreferrer"}},[t._v("循序渐进理解 HTTP Cache 机制"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://web.dev/i18n/zh/http-cache/",target:"_blank",rel:"noopener noreferrer"}},[t._v("web.dev - 使用 HTTP 缓存避免不必要的网络请求"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=_.exports}}]);